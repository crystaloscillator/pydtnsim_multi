head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2018.10.15.12.57.10;	author ohsaki;	state Exp;
branches;
next	1.1;

1.1
date	2018.05.27.08.55.52;	author ohsaki;	state Exp;
branches;
next	;


desc
@@


1.2
log
@*** empty log message ***
@
text
@#!/usr/bin/env3 python3
#
# A mobility class for visiting vertices sequentially.
# Copyright (c) 2011-2018, Hiroyuki Ohsaki.
# All rights reserved.
#
# $Id: sequential.py,v 1.1 2018/05/27 08:55:52 ohsaki Exp ohsaki $
#

import random

from dtnsim.mobility.graph.crwp import CRWP

class Sequential(CRWP):
    def __init__(self, next_goal=2, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.next_goal = next_goal
        # reposition to vertex 1
        self.move_to_point(self.vertex_point(1))

    def pick_goal(self):
        """Select the next goal; visit vertices in the ascending order of
        their IDs."""
        edge, offset = self.vertex_point(self.next_goal)
        self.goal_edge = edge
        self.goal_offset = offset
        self.update_goal_cache()
        self.reverse_current_if_necessary()

        nvertices = len(self.path.graph.vertices())
        next_goal = self.next_goal + 1
        if next_goal > nvertices:
            next_goal = 1
        self.next_goal = next_goal
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
# Copyright (c) 2011, Hiroyuki Ohsaki.
d7 1
a7 1
# $Id: Sequential.pm,v 1.6 2015/12/09 14:45:23 ohsaki Exp $
a13 1

a14 2

    # create and initialize the object
a17 1

d22 2
a29 1
        # visit vertices in the ascending order of their IDs
@

head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2018.10.15.12.26.49;	author ohsaki;	state Exp;
branches;
next	1.2;

1.2
date	2018.10.15.12.00.45;	author ohsaki;	state Exp;
branches;
next	1.1;

1.1
date	2018.05.27.08.31.52;	author ohsaki;	state Exp;
branches;
next	;


desc
@@


1.3
log
@*** empty log message ***
@
text
@#!/usr/bin/env python3
#
# Agent class for infinite-copy Epidemic routing.
# Copyright (c) 2011-2018, Hiroyuki Ohsaki.
# All rights reserved.
#
# Id: Epidemic.pm,v 1.8 2015/12/10 08:26:08 ohsaki Exp $
#

from dtnsim.agent.carryonly import CarryOnly

class Epidemic(CarryOnly):
    def forward(self):
        """Try to deliver its carrying message to all encountered agents."""
        encounters = self.encounters()
        for agent in encounters:
            for msg in self.pending_messages():
                dst = self.msg_dst(msg)
                if agent.id_ == dst:
                    self.sendmsg(agent, msg)
                    self.received[msg] -= 1
                    self.delivered[msg] += 1
                else:
                    self.sendmsg(agent, msg)
@


1.2
log
@*** empty log message ***
@
text
@d19 1
a19 1
                if agent.id() == dst:
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
# Copyright (c) 2011-2015, Hiroyuki Ohsaki.
a11 1

a12 2

    # try to deliver its carrying message to neighbor nodes
d14 1
@

head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2018.10.15.12.01.53;	author ohsaki;	state Exp;
branches;
next	1.1;

1.1
date	2018.05.27.08.31.56;	author ohsaki;	state Exp;
branches;
next	;


desc
@@


1.2
log
@*** empty log message ***
@
text
@#!/usr/bin/env python3
#
# An agent class implementing HP-BCAST.
# Copyright (c) 2011-2018, Hiroyuki Ohsaki.
# All rights reserved.
#
# Id: HP_BCAST.pm,v 1.11 2015/12/09 14:45:23 ohsaki Exp $
#

from dtnsim.agent.p_bcast import P_BCAST

class HP_BCAST(P_BCAST):
    def __init__(self, opts_ref):
        super().__init__()
        self.history = {}

    def forward(self):
        """Try to deliver its carrying messages to all encountered agents."""
        encounters = self.encounters()
        for agent in encounters:
            for msg in self.received:
                # do not forward if the encountered agent already has the message
                if self.history[msg].get(agent, None):
                    continue
                self.sendmsg(agent, msg)

                # receiver then knows sender has the message
                agent.history[msg][self] = 1
                # sender transfers its history with piggy backing
                for _ in self.history[msg]:
                    agent.history[msg][_] = 1
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
# Copyright (c) 2011-2015, Hiroyuki Ohsaki.
a11 1

a12 1
    # create and initialize the object
a16 1
    # try to deliver its carrying message to all neighbor nodes
d18 1
d22 1
a22 1
                # do not forward if encounter node already has the message
@

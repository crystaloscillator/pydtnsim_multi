#!/usr/bin/env python3

import fileinput
import sys
import time
from progressbar import ProgressBar
from argparse import ArgumentParser

class Process:
    def __init__(self):
        self.p_coverage = 0
        self.time = 0
        self.received_agent = {1}

    def update(self, received_agent):
        self.received_agent.add(agent)

    def get_size_of_received_agent(self):
        return len(self.received_agent)



def get_option():
    parser = ArgumentParser()
    parser.add_argument('files', metavar='FILE', nargs='*')
    parser.add_argument('-n', '--node', type=int)
    return parser.parse_args()

def main():
    args = get_option()
    n_nodes = args.node
    received_agent = {1}
    p = ProgressBar(0, n_nodes)
    for line in fileinput.input(files=args.files):
        log = line.split()
        time_ = log[0]
        type_ = log[1]
        if type_ == "forward":
            received_agent.add(int(log[3]))
            p_coverage = len(received_agent) / n_nodes
            p.update(len(received_agent))
            if p_coverage >= 1:
                time.sleep(1)
                sys.exit(0)


if __name__ == "__main__":
    main()
